[{"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\index.js":"1","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\App.js":"2","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\reportWebVitals.js":"3","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Navbar.js":"4","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\ShowMovieDetails.js":"5","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\NotFoundPage.js":"6","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\MovieListPage.js":"7","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\SearchForm.js":"8","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\MovieCard.js":"9","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\MovieCardDetails.js":"10","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\CustomCarousel.js":"11","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\ShowReviews.js":"12"},{"size":589,"mtime":1610684331047,"results":"13","hashOfConfig":"14"},{"size":1285,"mtime":1610794496479,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":1426,"mtime":1610776508871,"results":"17","hashOfConfig":"14"},{"size":994,"mtime":1610791186361,"results":"18","hashOfConfig":"14"},{"size":162,"mtime":1610684975181,"results":"19","hashOfConfig":"14"},{"size":3235,"mtime":1610880726696,"results":"20","hashOfConfig":"14"},{"size":501,"mtime":1610721588805,"results":"21","hashOfConfig":"14"},{"size":4083,"mtime":1610790866166,"results":"22","hashOfConfig":"14"},{"size":3490,"mtime":1610880966060,"results":"23","hashOfConfig":"14"},{"size":101,"mtime":1610795696875,"results":"24","hashOfConfig":"14"},{"size":1865,"mtime":1610881911790,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1jraggk",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\index.js",[],["53","54"],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\App.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\reportWebVitals.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Navbar.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\ShowMovieDetails.js",["55"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport MovieCardDetails from \"../components/MovieCardDetails\";\r\n\r\nconst API_KEY = process.env.REACT_APP_BACKEND_API_KEY;\r\nconst API_URL = process.env.REACT_APP_URL_API;\r\n\r\nconst ShowMovieDetails = () => {\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await fetch(`${API_URL}/movie/${id}?api_key=${API_KEY}`);\r\n        const data = await res.json();\r\n        setMovie(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>{loading ? <h1>Loading</h1> : <MovieCardDetails card={movie} />}</div>\r\n  );\r\n};\r\n\r\nexport default ShowMovieDetails;\r\n","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\MovieListPage.js",["56","57"],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\SearchForm.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\MovieCard.js",["58"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./moviecard.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { faHeart, faShareAlt, faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// https://api.themoviedb.org/3/genre/movie/list?api_key=430811050a45e411c3025a7085596f92&language=en-US\r\n\r\n// URL TO FETCH GENRE\r\n\r\nconst MovieCard = ({ card }) => {\r\n  // const [genres, setGenres] = useState([]);\r\n  const [movieGenre, setMovieGenre] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await fetch(\r\n          `https://api.themoviedb.org/3/genre/movie/list?api_key=430811050a45e411c3025a7085596f92&language=en-US`\r\n        );\r\n        const data = await res.json();\r\n        setMovieGenre(\r\n          Object.values(data.genres)\r\n            .map((genre) => card.genres.filter((gen) => gen.id === genre.id))\r\n            .filter((x) => x.length === 1)\r\n            .flat()\r\n        );\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  const toggleClassName = (e) => {\r\n    e.target.parentNode.style.cssText.includes(\"red\")\r\n      ? (e.target.parentNode.style.cssText = \"font-size: 1.5rem;\")\r\n      : (e.target.parentNode.style.cssText = \"font-size: 1.5rem; color: red\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"movie_card\" id=\"tomb\">\r\n        <div className=\"info_section\">\r\n          <div className=\"movie_header\">\r\n            <img\r\n              className=\"locandina\"\r\n              src={`https://image.tmdb.org/t/p/w500/${card.poster_path}`}\r\n              alt=\"poster\"\r\n            />\r\n            <h1>\r\n              {card.title.length > 30\r\n                ? `${card.title.slice(0, 30)}...`\r\n                : card.title}\r\n            </h1>\r\n            <h4>{card.release_date.slice(0, 4)}</h4>\r\n            <span className=\"rating\">\r\n              <FontAwesomeIcon\r\n                style={{ fontSize: \"2rem\", color: \"yellow\" }}\r\n                icon={faStar}\r\n              />\r\n              <div className=\"ratings-stat\">\r\n                <div>\r\n                  <span className=\"average-rating\">{card.vote_average}</span>/10\r\n                </div>\r\n                <div>{card.vote_count} votes</div>\r\n              </div>\r\n            </span>\r\n            {loading ? (\r\n              <p>Loading</p>\r\n            ) : (\r\n              <>\r\n                {movieGenre.map((gen) => (\r\n                  <p key={gen.id} className=\"minutes\">\r\n                    {gen.name}\r\n                  </p>\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"movie_desc\">\r\n            <p className=\"text\">\r\n              {card.overview.length > 250\r\n                ? `${card.overview.slice(0, 250)}...`\r\n                : card.overview}\r\n            </p>\r\n            <div className=\"button-see-more\">\r\n              <Link to={`/movie/${card.id}`}>\r\n                See More\r\n                <span className=\"shift\">â€º</span>\r\n              </Link>\r\n              <div className=\"mask\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"movie_social\">\r\n            <ul>\r\n              <li onClick={toggleClassName}>\r\n                <FontAwesomeIcon\r\n                  style={{ fontSize: \"1.5rem\" }}\r\n                  icon={faHeart}\r\n                />\r\n              </li>\r\n              <li>\r\n                <FontAwesomeIcon\r\n                  style={{ color: \"white\", fontSize: \"1.5rem\" }}\r\n                  icon={faShareAlt}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"blur_back tomb_back\"\r\n          style={{\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${card.backdrop_path}\")`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\MovieCardDetails.js",["59","60"],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\CustomCarousel.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\ShowReviews.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":57,"column":6,"nodeType":"72","endLine":57,"endColumn":48,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":37,"column":6,"nodeType":"72","endLine":37,"endColumn":8,"suggestions":"75"},{"ruleId":"65","severity":1,"message":"76","line":7,"column":7,"nodeType":"67","messageId":"68","endLine":7,"endColumn":14},{"ruleId":"70","severity":1,"message":"77","line":37,"column":6,"nodeType":"72","endLine":37,"endColumn":8,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'MovieCard' is defined but never used.","Identifier","unusedVar","'Slider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has a missing dependency: 'card.genres'. Either include it or remove the dependency array. If 'setMovieGenre' needs the current value of 'card.genres', you can also switch to useReducer instead of useState and read 'card.genres' in the reducer.",["82"],"'API_URL' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'card.id' and 'reviews'. Either include them or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [sliderMarks, sliderYearMarks, filterTerm, movies]",{"range":"90","text":"91"},"Update the dependencies array to be: [card.genres]",{"range":"92","text":"93"},"Update the dependencies array to be: [card.id, reviews]",{"range":"94","text":"95"},[1997,2039],"[sliderMarks, sliderYearMarks, filterTerm, movies]",[1235,1237],"[card.genres]",[1246,1248],"[card.id, reviews]"]