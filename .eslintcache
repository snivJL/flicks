[{"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\index.js":"1","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\App.js":"2","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\reportWebVitals.js":"3","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Navbar.js":"4","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\ShowMovieDetails.js":"5","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\NotFoundPage.js":"6","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\MovieListPage.js":"7","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\SearchForm.js":"8","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\MovieCard.js":"9","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\MovieCardDetails.js":"10","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\CustomCarousel.js":"11","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\ShowReviews.js":"12","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\TestPage.js":"13","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Sidebar.js":"14","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Genres.js":"15","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Spinner.js":"16"},{"size":589,"mtime":1610890038376,"results":"17","hashOfConfig":"18"},{"size":1259,"mtime":1610936312171,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1426,"mtime":1610887061332,"results":"21","hashOfConfig":"18"},{"size":973,"mtime":1610936417791,"results":"22","hashOfConfig":"18"},{"size":681,"mtime":1610937957017,"results":"23","hashOfConfig":"18"},{"size":4870,"mtime":1610934747332,"results":"24","hashOfConfig":"18"},{"size":501,"mtime":1610721588805,"results":"25","hashOfConfig":"18"},{"size":3547,"mtime":1610904449484,"results":"26","hashOfConfig":"18"},{"size":4580,"mtime":1610935999739,"results":"27","hashOfConfig":"18"},{"size":101,"mtime":1610795696875,"results":"28","hashOfConfig":"18"},{"size":1829,"mtime":1610882356049,"results":"29","hashOfConfig":"18"},{"size":125,"mtime":1610883310838,"results":"30","hashOfConfig":"18"},{"size":1433,"mtime":1610896531789,"results":"31","hashOfConfig":"18"},{"size":1351,"mtime":1610902525821,"results":"32","hashOfConfig":"18"},{"size":364,"mtime":1610932716753,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1jraggk",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\index.js",[],["69","70"],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\App.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\reportWebVitals.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Navbar.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\ShowMovieDetails.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\MovieListPage.js",["71"],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\SearchForm.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\MovieCard.js",["72"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./moviecard.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { faHeart, faShareAlt, faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// https://api.themoviedb.org/3/genre/movie/list?api_key=430811050a45e411c3025a7085596f92&language=en-US\r\n\r\n// URL TO FETCH GENRE\r\n\r\nconst MovieCard = ({ movieGenres, card }) => {\r\n  // const [genres, setGenres] = useState([]);\r\n  const [movieGenre, setMovieGenre] = useState([]);\r\n  useEffect(() => {\r\n    setMovieGenre(\r\n      movieGenres.genres.reduce((acc, genre) => {\r\n        if (card.genre_ids.includes(genre.id)) acc.push(genre.name);\r\n        return acc;\r\n      }, [])\r\n    );\r\n  }, []);\r\n  const toggleClassName = (e) => {\r\n    e.target.parentNode.style.cssText.includes(\"red\")\r\n      ? (e.target.parentNode.style.cssText = \"font-size: 1.5rem;\")\r\n      : (e.target.parentNode.style.cssText = \"font-size: 1.5rem; color: red\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"movie_card\" id=\"tomb\">\r\n        <div className=\"info_section\">\r\n          <div className=\"movie_header\">\r\n            <img\r\n              className=\"locandina\"\r\n              src={`https://image.tmdb.org/t/p/w500/${card.poster_path}`}\r\n              alt=\"poster\"\r\n            />\r\n            <h1>\r\n              {card.title.length > 30\r\n                ? `${card.title.slice(0, 30)}...`\r\n                : card.title}\r\n            </h1>\r\n            <h4>{card.release_date.slice(0, 4)}</h4>\r\n            <span className=\"rating\">\r\n              <FontAwesomeIcon\r\n                style={{ fontSize: \"2rem\", color: \"yellow\" }}\r\n                icon={faStar}\r\n              />\r\n              <div className=\"ratings-stat\">\r\n                <div>\r\n                  <span className=\"average-rating\">{card.vote_average}</span>/10\r\n                </div>\r\n                <div>{card.vote_count} votes</div>\r\n              </div>\r\n            </span>\r\n            {\r\n              <>\r\n                {movieGenre.map((gen) => (\r\n                  <p key={gen} className=\"minutes\">\r\n                    {gen}\r\n                  </p>\r\n                ))}\r\n              </>\r\n            }\r\n          </div>\r\n          <div className=\"movie_desc\">\r\n            <p className=\"text\">\r\n              {card.overview.length > 250\r\n                ? `${card.overview.slice(0, 250)}...`\r\n                : card.overview}\r\n            </p>\r\n            <div className=\"button-see-more\">\r\n              <Link to={`/movie/${card.id}`}>\r\n                See More\r\n                <span className=\"shift\">â€º</span>\r\n              </Link>\r\n              <div className=\"mask\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"movie_social\">\r\n            <ul>\r\n              <li onClick={toggleClassName}>\r\n                <FontAwesomeIcon\r\n                  style={{ fontSize: \"1.5rem\" }}\r\n                  icon={faHeart}\r\n                />\r\n              </li>\r\n              <li>\r\n                <FontAwesomeIcon\r\n                  style={{ color: \"white\", fontSize: \"1.5rem\" }}\r\n                  icon={faShareAlt}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"blur_back tomb_back\"\r\n          style={{\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${card.backdrop_path}\")`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\MovieCardDetails.js",["73"],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\CustomCarousel.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\ShowReviews.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\pages\\TestPage.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Sidebar.js",[],"C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Genres.js",["74","75"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Genres = ({ card }) => {\r\n  const [movieGenres, setMovieGenres] = useState([]);\r\n  const [movieGenre, setMovieGenre] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  //GET GENRE\r\n  useEffect(() => {\r\n    const getGenre = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await fetch(\r\n          `https://api.themoviedb.org/3/genre/movie/list?api_key=430811050a45e411c3025a7085596f92&language=en-US`\r\n        );\r\n        const data = await res.json();\r\n        setMovieGenres(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getGenre();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"HERE\", movieGenres, card);\r\n    // setMovieGenre(\r\n    //   movieGenres.genres.reduce((acc, genre) => {\r\n    //     console.log(\"IN ACC\", acc);\r\n    //     if (card.genre_ids.includes(genre.id)) acc.push(genre.name);\r\n    //     return acc;\r\n    //   }, [])\r\n    // );\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <h1>Loading</h1>\r\n      ) : (\r\n        <h1>\r\n          {movieGenre.map((gen) => (\r\n            <p key={gen.id} className=\"minutes\">\r\n              {gen}\r\n            </p>\r\n          ))}\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","C:\\Users\\ACER\\Desktop\\coderschool\\Week6\\flicks\\src\\components\\Spinner.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":110,"column":6,"nodeType":"82","endLine":110,"endColumn":63,"suggestions":"83"},{"ruleId":"80","severity":1,"message":"84","line":22,"column":6,"nodeType":"82","endLine":22,"endColumn":8,"suggestions":"85"},{"ruleId":"80","severity":1,"message":"86","line":52,"column":6,"nodeType":"82","endLine":52,"endColumn":8,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":22,"nodeType":"90","messageId":"91","endLine":5,"endColumn":35},{"ruleId":"80","severity":1,"message":"92","line":36,"column":6,"nodeType":"82","endLine":36,"endColumn":8,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has missing dependencies: 'card.genre_ids' and 'movieGenres.genres'. Either include them or remove the dependency array. If 'setMovieGenre' needs the current value of 'movieGenres.genres', you can also switch to useReducer instead of useState and read 'movieGenres.genres' in the reducer.",["97"],"React Hook useEffect has a missing dependency: 'card.id'. Either include it or remove the dependency array.",["98"],"no-unused-vars","'setMovieGenre' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'card' and 'movieGenres'. Either include them or remove the dependency array.",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [sliderMarks, sliderYearMarks, filterTerm, optionChanged, movies]",{"range":"108","text":"109"},"Update the dependencies array to be: [card.genre_ids, movieGenres.genres]",{"range":"110","text":"111"},"Update the dependencies array to be: [card.id]",{"range":"112","text":"113"},"Update the dependencies array to be: [card, movieGenres]",{"range":"114","text":"115"},[3603,3660],"[sliderMarks, sliderYearMarks, filterTerm, optionChanged, movies]",[768,770],"[card.genre_ids, movieGenres.genres]",[1722,1724],"[card.id]",[1034,1036],"[card, movieGenres]"]